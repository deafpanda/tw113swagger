/* 
 * Tripwire Enterprise TE REST API User Guide & Reference
 *
 * The TE REST API allows automation of many aspects of Tripwire Enterprise
 *
 * OpenAPI spec version: 1.12.1.bmaster.r20170922182356-4e84151.b1741
 * Contact: support@tripwire.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// Users define who can login to Tripwire Enterprise, and track their last activity.
    /// </summary>
    [DataContract]
    public partial class User :  IEquatable<User>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="User" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected User() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="User" /> class.
        /// </summary>
        /// <param name="id">Readable-Key identity of the user.</param>
        /// <param name="name">The login name of the user (modifiable). (required).</param>
        /// <param name="email">An email address for the user (modifiable)..</param>
        /// <param name="lastLogin">A timestamp noting the last time the user logged into Tripwire Enterprise (restrictions: read-only).</param>
        /// <param name="lastLogout">A timestamp noting the last time the user logged out of Tripwire Enterprise (restrictions: read-only).</param>
        /// <param name="description">Free form notes describing the user (modifiable)..</param>
        /// <param name="builtin">If true, the user is provided by Tripwire Enterprise and cannot be modified or removed (restrictions: read-only) (default to false).</param>
        public User(string id = default(string), string name = default(string), string email = default(string), string lastLogin = default(string), string lastLogout = default(string), string description = default(string), bool? builtin = false)
        {
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new InvalidDataException("name is a required property for User and cannot be null");
            }
            else
            {
                this.Name = name;
            }
            this.Id = id;
            this.Email = email;
            this.LastLogin = lastLogin;
            this.LastLogout = lastLogout;
            this.Description = description;
            // use default value if no "builtin" provided
            if (builtin == null)
            {
                this.Builtin = false;
            }
            else
            {
                this.Builtin = builtin;
            }
        }
        
        /// <summary>
        /// Readable-Key identity of the user
        /// </summary>
        /// <value>Readable-Key identity of the user</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// The login name of the user (modifiable).
        /// </summary>
        /// <value>The login name of the user (modifiable).</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// An email address for the user (modifiable).
        /// </summary>
        /// <value>An email address for the user (modifiable).</value>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// A timestamp noting the last time the user logged into Tripwire Enterprise (restrictions: read-only)
        /// </summary>
        /// <value>A timestamp noting the last time the user logged into Tripwire Enterprise (restrictions: read-only)</value>
        [DataMember(Name="lastLogin", EmitDefaultValue=false)]
        public string LastLogin { get; set; }

        /// <summary>
        /// A timestamp noting the last time the user logged out of Tripwire Enterprise (restrictions: read-only)
        /// </summary>
        /// <value>A timestamp noting the last time the user logged out of Tripwire Enterprise (restrictions: read-only)</value>
        [DataMember(Name="lastLogout", EmitDefaultValue=false)]
        public string LastLogout { get; set; }

        /// <summary>
        /// Free form notes describing the user (modifiable).
        /// </summary>
        /// <value>Free form notes describing the user (modifiable).</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// If true, the user is provided by Tripwire Enterprise and cannot be modified or removed (restrictions: read-only)
        /// </summary>
        /// <value>If true, the user is provided by Tripwire Enterprise and cannot be modified or removed (restrictions: read-only)</value>
        [DataMember(Name="builtin", EmitDefaultValue=false)]
        public bool? Builtin { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class User {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  LastLogin: ").Append(LastLogin).Append("\n");
            sb.Append("  LastLogout: ").Append(LastLogout).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Builtin: ").Append(Builtin).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as User);
        }

        /// <summary>
        /// Returns true if User instances are equal
        /// </summary>
        /// <param name="input">Instance of User to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(User input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.LastLogin == input.LastLogin ||
                    (this.LastLogin != null &&
                    this.LastLogin.Equals(input.LastLogin))
                ) && 
                (
                    this.LastLogout == input.LastLogout ||
                    (this.LastLogout != null &&
                    this.LastLogout.Equals(input.LastLogout))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Builtin == input.Builtin ||
                    (this.Builtin != null &&
                    this.Builtin.Equals(input.Builtin))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.LastLogin != null)
                    hashCode = hashCode * 59 + this.LastLogin.GetHashCode();
                if (this.LastLogout != null)
                    hashCode = hashCode * 59 + this.LastLogout.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Builtin != null)
                    hashCode = hashCode * 59 + this.Builtin.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
