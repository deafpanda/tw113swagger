/* 
 * Tripwire Enterprise TE REST API User Guide & Reference
 *
 * The TE REST API allows automation of many aspects of Tripwire Enterprise
 *
 * OpenAPI spec version: 1.13.0.bmaster.r20180119190259-8b60eaa.b1753
 * Contact: support@tripwire.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing RolesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class RolesApiTests
    {
        private RolesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new RolesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RolesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' RolesApi
            //Assert.IsInstanceOfType(typeof(RolesApi), instance, "instance is a RolesApi");
        }

        
        /// <summary>
        /// Test AssociatePermissionToRole
        /// </summary>
        [Test]
        public void AssociatePermissionToRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string rkRoleId = null;
            //string rkPermissionId = null;
            //instance.AssociatePermissionToRole(rkRoleId, rkPermissionId);
            
        }
        
        /// <summary>
        /// Test CreateRole
        /// </summary>
        [Test]
        public void CreateRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Role body = null;
            //var response = instance.CreateRole(body);
            //Assert.IsInstanceOf<Role> (response, "response is Role");
        }
        
        /// <summary>
        /// Test DeletePermissionFromRole
        /// </summary>
        [Test]
        public void DeletePermissionFromRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string rkRoleId = null;
            //string rkPermissionId = null;
            //instance.DeletePermissionFromRole(rkRoleId, rkPermissionId);
            
        }
        
        /// <summary>
        /// Test DeleteRole
        /// </summary>
        [Test]
        public void DeleteRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string rkRoleId = null;
            //instance.DeleteRole(rkRoleId);
            
        }
        
        /// <summary>
        /// Test GetRole
        /// </summary>
        [Test]
        public void GetRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string rkRoleId = null;
            //var response = instance.GetRole(rkRoleId);
            //Assert.IsInstanceOf<Role> (response, "response is Role");
        }
        
        /// <summary>
        /// Test GetRolePermissions
        /// </summary>
        [Test]
        public void GetRolePermissionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string rkRoleId = null;
            //var response = instance.GetRolePermissions(rkRoleId);
            //Assert.IsInstanceOf<Permission> (response, "response is Permission");
        }
        
        /// <summary>
        /// Test GetRoles
        /// </summary>
        [Test]
        public void GetRolesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //bool? administrator = null;
            //bool? builtin = null;
            //List<string> description = null;
            //List<string> id = null;
            //List<string> name = null;
            //List<string> subDescription = null;
            //var response = instance.GetRoles(administrator, builtin, description, id, name, subDescription);
            //Assert.IsInstanceOf<Role> (response, "response is Role");
        }
        
        /// <summary>
        /// Test UpdateRole
        /// </summary>
        [Test]
        public void UpdateRoleTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string rkRoleId = null;
            //Role body = null;
            //var response = instance.UpdateRole(rkRoleId, body);
            //Assert.IsInstanceOf<Role> (response, "response is Role");
        }
        
    }

}
