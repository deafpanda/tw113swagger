/* 
 * Tripwire Enterprise TE REST API User Guide & Reference
 *
 * The TE REST API allows automation of many aspects of Tripwire Enterprise
 *
 * OpenAPI spec version: 1.12.1.bmaster.r20170922182356-4e84151.b1741
 * Contact: support@tripwire.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing CustomPropertyType
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class CustomPropertyTypeTests
    {
        // TODO uncomment below to declare an instance variable for CustomPropertyType
        //private CustomPropertyType instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of CustomPropertyType
            //instance = new CustomPropertyType();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CustomPropertyType
        /// </summary>
        [Test]
        public void CustomPropertyTypeInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" CustomPropertyType
            //Assert.IsInstanceOfType<CustomPropertyType> (instance, "variable 'instance' is a CustomPropertyType");
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Test]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'InheritDefault'
        /// </summary>
        [Test]
        public void InheritDefaultTest()
        {
            // TODO unit test for the property 'InheritDefault'
        }
        /// <summary>
        /// Test the property 'DefaultValue'
        /// </summary>
        [Test]
        public void DefaultValueTest()
        {
            // TODO unit test for the property 'DefaultValue'
        }
        /// <summary>
        /// Test the property 'MinValue'
        /// </summary>
        [Test]
        public void MinValueTest()
        {
            // TODO unit test for the property 'MinValue'
        }
        /// <summary>
        /// Test the property 'MaxValue'
        /// </summary>
        [Test]
        public void MaxValueTest()
        {
            // TODO unit test for the property 'MaxValue'
        }
        /// <summary>
        /// Test the property 'AvailableValues'
        /// </summary>
        [Test]
        public void AvailableValuesTest()
        {
            // TODO unit test for the property 'AvailableValues'
        }
        /// <summary>
        /// Test the property 'MaxCharacters'
        /// </summary>
        [Test]
        public void MaxCharactersTest()
        {
            // TODO unit test for the property 'MaxCharacters'
        }
        /// <summary>
        /// Test the property 'AllowMultilineValues'
        /// </summary>
        [Test]
        public void AllowMultilineValuesTest()
        {
            // TODO unit test for the property 'AllowMultilineValues'
        }
        /// <summary>
        /// Test the property 'TextEditorWidth'
        /// </summary>
        [Test]
        public void TextEditorWidthTest()
        {
            // TODO unit test for the property 'TextEditorWidth'
        }

    }

}
